datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum NotificationType {
  LIKE
  COMMENT
  FOLLOW
}

model User {
  user_id          Int       @id @default(autoincrement())
  username         String    @unique
  email            String    @unique
  password         String
  created_at       DateTime  @default(now())

  profile          Profile?
  posts            Post[]
  comments         Comment[]
  likes            Like[]
  followers        Follow[]  @relation("UserFollowers")
  following        Follow[]  @relation("UserFollowing")
  receivedNotifications Notification[] @relation("UserNotifications")
  generatedNotifications Notification[] @relation("GeneratedNotifications")
}

model Profile {
  profile_id       Int       @id @default(autoincrement())
  user_id          Int       @unique
  profile_picture  String?
  bio              String?   @db.VarChar(100)
  status_message   String?   @db.VarChar(50)
  created_at       DateTime  @default(now())
  updated_at       DateTime  @updatedAt

  user             User      @relation(fields: [user_id], references: [user_id])
}

model Post {
  post_id          Int       @id @default(autoincrement())
  user_id          Int
  image_url        String
  caption          String?   @db.VarChar(144)
  created_at       DateTime  @default(now())

  user             User      @relation(fields: [user_id], references: [user_id])
  comments         Comment[]
  likes            Like[]
  notifications    Notification[] @relation("PostNotifications")
}

model Comment {
  comment_id       Int       @id @default(autoincrement())
  post_id          Int
  user_id          Int
  comment          String    @db.VarChar(144)
  created_at       DateTime  @default(now())

  post             Post      @relation(fields: [post_id], references: [post_id])
  user             User      @relation(fields: [user_id], references: [user_id])
  notifications    Notification[] @relation("CommentNotifications")
}

model Like {
  like_id          Int       @id @default(autoincrement())
  post_id          Int
  user_id          Int
  created_at       DateTime  @default(now())

  post             Post      @relation(fields: [post_id], references: [post_id])
  user             User      @relation(fields: [user_id], references: [user_id])
}

model Follow {
  follow_id        Int       @id @default(autoincrement())
  follower_id      Int
  following_id     Int
  created_at       DateTime  @default(now())

  follower         User      @relation("UserFollowing", fields: [follower_id], references: [user_id])
  following        User      @relation("UserFollowers", fields: [following_id], references: [user_id])
}

model Notification {
  notification_id  Int               @id @default(autoincrement())
  user_id          Int
  type             NotificationType
  source_user_id   Int
  post_id          Int?
  comment_id       Int?
  created_at       DateTime          @default(now())

  user             User              @relation("UserNotifications", fields: [user_id], references: [user_id])
  source_user      User              @relation("GeneratedNotifications", fields: [source_user_id], references: [user_id])
  post             Post?             @relation("PostNotifications", fields: [post_id], references: [post_id])
  comment          Comment?          @relation("CommentNotifications", fields: [comment_id], references: [comment_id])
}
